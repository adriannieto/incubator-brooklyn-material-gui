.md-bolder{
    font-weight: bolder;
}

.md-toolbar-image{
    height: 50%;
}

.md-toolbar-tools .md-button{
    font-weight: 300;


}

.md-sidenav-right{
    background: #ECEFF1;
}

.md-view-active {
    font-weight: 500 !important;

}
.wrapper {
    height: 90vh;
}

.md-fab-container {
    position: fixed;
    z-index: 10000;
    bottom: 30px;
    right: 50px;
}

.md-fab {
    color: #f4f4f4;
    fill: #f4f4f4;

}

.md-fab:hover.green-background, .md-fab.md-focused.light-blue-background {
    background-color: #0460d7 !important;
}

.md-fab:hover.green-background, .md-fab.md-focused.purple-background {
    background-color: #8a61e0 !important;
}


.angular-google-map-container { height: 310px; }

.angular-ui-codemirror-container .CodeMirror{ height: 220px; }


/* Useful colors */

.gray-background {
    background: #f5f5f5 !important;
}

.green-background {
    background: #b9f6ca !important;
}

.yellow-background {
    background: #ffff8d !important;
}

.blue-background {
    background: #84ffff !important;
}

.purple-background {
    background: #b388ff !important;
}

.red-background {
    background: #ff8a80 !important;
}

.pink-background {
    background: #E91E63 !important;
}

.light-blue-background {
    background: #03A9F4 !important;
}

.md-drop-zone-border {
    border: #ddd 1px dashed;
}



/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.md-drop-zone-container ul[dnd-list],
.md-drop-zone-container ul[dnd-list] > li {
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.md-drop-zone-container ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.md-drop-zone-container ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.md-drop-zone-container ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.md-drop-zone-container ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;

    /* Disable text selection if item is not draggable */
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/**
 * Gender-specifc background
 */
.md-drop-zone-container ul[dnd-list] li.background-man {
    background-color: #CAE0FC;
    color: #2F4D99;
}

.md-drop-zone-container ul[dnd-list] li.background-woman {
    background-color: #FFE2F5;
    color: #D84FA7;
}
